/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package parse;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INT = 10;
  /** RegularExpression Id. */
  int PLUS = 11;
  /** RegularExpression Id. */
  int MINUS = 12;
  /** RegularExpression Id. */
  int MULT = 13;
  /** RegularExpression Id. */
  int LT = 14;
  /** RegularExpression Id. */
  int LEQ = 15;
  /** RegularExpression Id. */
  int GT = 16;
  /** RegularExpression Id. */
  int GEQ = 17;
  /** RegularExpression Id. */
  int EQ = 18;
  /** RegularExpression Id. */
  int NEQ = 19;
  /** RegularExpression Id. */
  int SET = 20;
  /** RegularExpression Id. */
  int AND = 21;
  /** RegularExpression Id. */
  int OPAR = 22;
  /** RegularExpression Id. */
  int CPAR = 23;
  /** RegularExpression Id. */
  int OSB = 24;
  /** RegularExpression Id. */
  int CSB = 25;
  /** RegularExpression Id. */
  int OBRACE = 26;
  /** RegularExpression Id. */
  int CBRACE = 27;
  /** RegularExpression Id. */
  int EXCL = 28;
  /** RegularExpression Id. */
  int SCL = 29;
  /** RegularExpression Id. */
  int KWINT = 30;
  /** RegularExpression Id. */
  int KWBOOL = 31;
  /** RegularExpression Id. */
  int SOPL = 32;
  /** RegularExpression Id. */
  int BOOL = 33;
  /** RegularExpression Id. */
  int DOT = 34;
  /** RegularExpression Id. */
  int NEW = 35;
  /** RegularExpression Id. */
  int LENGTH = 36;
  /** RegularExpression Id. */
  int PUBLIC = 37;
  /** RegularExpression Id. */
  int STATIC = 38;
  /** RegularExpression Id. */
  int IF = 39;
  /** RegularExpression Id. */
  int ELSE = 40;
  /** RegularExpression Id. */
  int CLASS = 41;
  /** RegularExpression Id. */
  int WHILE = 42;
  /** RegularExpression Id. */
  int RETURN = 43;
  /** RegularExpression Id. */
  int COMMA = 44;
  /** RegularExpression Id. */
  int VOID = 45;
  /** RegularExpression Id. */
  int EXTENDS = 46;
  /** RegularExpression Id. */
  int ID = 47;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\\n\"",
    "\"\\r\"",
    "\"/*\"",
    "<token of kind 7>",
    "\"*/\"",
    "<token of kind 9>",
    "<INT>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"==\"",
    "\"!=\"",
    "\"=\"",
    "\"&&\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"!\"",
    "\";\"",
    "\"int\"",
    "\"boolean\"",
    "\"System.out.println\"",
    "<BOOL>",
    "\".\"",
    "\"new\"",
    "\"length\"",
    "\"public\"",
    "\"static\"",
    "\"if\"",
    "\"else\"",
    "\"class\"",
    "\"while\"",
    "\"return\"",
    "\",\"",
    "\"void\"",
    "\"extends\"",
    "<ID>",
  };

}
